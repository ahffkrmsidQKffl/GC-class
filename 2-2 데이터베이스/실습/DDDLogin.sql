CREATE TABLE STUDENT (
	SID	INT	NOT NULL,
	SNAME CHAR(10),
	STARTYEAR DATE,
    DID INT,
	PRIMARY KEY(SID),
    FOREIGN KEY(DID) REFERENCES DEPARTMENT(DID)
);

CREATE TABLE DEPARTMENT (
	DID	INT	NOT NULL,
	DNAME CHAR(10),
	PHONE CHAR(20),
	PRIMARY KEY(DID)
);

CREATE TABLE PROFESSOR (
	PNAME CHAR(10),
	DID INT,
	BUILDING CHAR(20),
    OFFICE INT,
    EMAIL CHAR(30),
    PRIMARY KEY(PNAME),
    FOREIGN KEY(DID) REFERENCES DEPARTMENT(DID)
);

CREATE TABLE EXAM (
	SID INT,
	CID INT,
	PROFESSOR CHAR(10),
    GRADE CHAR(10),
    FOREIGN KEY(SID) REFERENCES STUDENT(SID),
    FOREIGN KEY(PROFESSOR) REFERENCES PROFESSOR(PNAME)
);

SELECT CONSTRAINT_NAME, DELETE_RULE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'PROFESSOR';

ALTER TABLE PROFESSOR
DROP CONSTRAINT SYS_C007469;

ALTER TABLE PROFESSOR
DROP CONSTRAINT SYS_C007470;

ALTER TABLE PROFESSOR
ADD CONSTRAINT PK_PROFESSOR_PNAME PRIMARY KEY (PNAME);

ALTER TABLE PROFESSOR
ADD CONSTRAINT FK_PROFESSOR_DID
FOREIGN KEY (DID) REFERENCES DEPARTMENT(DID);



--질의1: 2005년에 컴퓨터학과에 입학한 모든 학생들에 대해서 학번과 이름을 검색하라. 학생의 이름이 오름차순으로 결과가 나타나야 한다.
SELECT SNAME, SID
FROM STUDENT S, DEPARTMENT D
WHERE S.DID = D.DID AND STARTYEAR = 2005 AND DNAME = '컴퓨터학과' 
ORDER BY SNAME;

--질의2: 과목 'COMP-321'과 'COMP-234'에 대해서 시험을 실시한 교수들의 이름을 검색하라.
SELECT PNAME
FROM EXAM E, PROFESSOR P
WHERE E.PROFESSOR = P.PNAME AND CID = 'COMP-321' AND CID = 'COMP-234';

--질의3: 오직 한 과목에 대해서만 시험을 치른 학생(즉, 릴레이션 EXAM에 한 개의 투플만 들어 있는 학생)들의 학번을 검색하라
SELECT SID
FROM EXAM
GROUP BY SID
HAVING COUNT(CID) = 1;

--질의4: 적어도 두 과목의 시험을 실시한 교수들의 이름을 검색하라. 결과에서 중복이 제거되도록 하라.
SELECT DISTINCT PROFESSOR
FROM EXAM
GROUP BY PROFESSOR
HAVING COUNT(CID) >= 2;

--질의5: 적어도 한 시험의 성적이 'A0'인 학생들의 학번을 검색하라. 결과에서 중복이 제거되도록 하라.
SELECT DISTINCT SID
FROM EXAM
GROUP BY SID
HAVING COUNT(GRADE='A0')>=1;

--질의6: 적어도 두 시험의 성적이 'A0'인 학생들의 학번을 검색하라.
SELECT SID
FROM EXAM
GROUP BY SID
HAVING COUNT(GRADE='A0')>=2;

--질의7: 모든 시험의 성적이 'A0'인 학생들의 학번을 검색하라.
SELECT SID
FROM EXAM
WHERE SID NOT IN (
SELECT SID
FROM EXAM
WHERE GRADE <> 'A0'
);

--질의8: 각 과목의 평균 성적을 검색하라
SELECT CID, AVG(GRADE)
FROM EXAM
GROUP BY CID;